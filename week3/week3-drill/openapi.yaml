openapi: "3.0.3"

info:
  title: "Todo API"
  description: "Todoデータのやり取りをするためのAPIです"
  version: "1.0.0"

servers:
  - url: "https://localhost/api"
    description: "ローカル環境"

tags:
  - name: "todos"
    description: "Todoの操作"

paths:
  "/todos":
    post:
      summary: "Todoを作成"
      tags: ["todos"]
      deprecated: false
      requestBody:
        description: "作成内容"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text: { type: string, example: "hello" }
      responses:
        "201":
          description: "成功"
    get:
      summary: "Todoを全件取得"
      tags: ["todos"]
      deprecated: false
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todos"

  "/todos/{id}":
    get:
      summary: "Todoを一件取得"
      tags: ["todos"]
      deprecated: false
      parameters:
        - $ref: "#/components/parameters/TodoId"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
    patch:
      summary: "一つのTodoを更新"
      tags: ["todos"]
      deprecated: false
      parameters:
        - $ref: "#/components/parameters/TodoId"
        - name: X-Api-key
          in: header
          required: true
          description: "APIキーをヘッダーに付与"
          schema: { type: string }
          example: "xxx-xxx-xxx-xxx"
        - name: token
          in: cookie
          description: "アクセストークン"
          required: true
          schema: { type: string }
          example: "xxx-xxx-xxx-xxx"
      responses:
        "201":
          description: "成功"
    delete:
      summary: "一つのTodoを削除"
      tags: ["todos"]
      deprecated: false
      parameters:
        - $ref: "#/components/parameters/TodoId"
      responses:
        "200":
          description: "成功"

components:
  schemas:
    Todo:
      type: object
      properties:
        id: { type: number, example: 1 }
        text: { type: string, example: "hello" }
        created_at: { type: string, format: date-time, example: 2022-01-30 }
        updated_at: { type: string, format: date-time, example: 2022-01-30 }
    Todos:
      type: array
      items:
        type: object
        properties:
          id: { type: number, example: 1 }
          text: { type: string, example: "hello" }
          created_at: { type: string, format: date-time, example: 2022-01-30 }
          updated_at: { type: string, format: date-time, example: 2022-01-30 }
  parameters:
    TodoId:
      name: id
      in: path
      required: true
      schema: { type: string }
      example: "1"